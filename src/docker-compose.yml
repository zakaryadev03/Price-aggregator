version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  
      - "15672:15672" 
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app_network
  
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: guest
      POSTGRES_PASSWORD: guest
      POSTGRES_DB: pricedb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./price-tracker/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app_network
  
  aliexpress:
    build:
      context: ./aliexpress/
      dockerfile: Dockerfile
    container_name: aliexpress
    depends_on:
      - rabbitmq
    env_file:
      - ./aliexpress/src/.env
    networks:
      - app_network
  
  amazon:
    build:
      context: ./amazon/
      dockerfile: Dockerfile
    container_name: amazon
    depends_on:
      - rabbitmq
    env_file:
      - ./amazon/.env
    networks:
      - app_network
  
  price-tracker:
    build:
      context: ./price-tracker/
      dockerfile: Dockerfile
    container_name: price-tracker
    depends_on:
      - rabbitmq
      - postgres
    env_file:
      - ./price-tracker/src/.env
    networks:
      - app_network
  
  aggregator:
    build:
      context: ./aggregator/
      dockerfile: Dockerfile
    container_name: aggregator
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
      - postgres
    env_file:
      - ./aggregator/.env
    networks:
      - app_network

  aggregator:
    build:
      context: ./aggregator/
      dockerfile: Dockerfile
    container_name: aggregator
    depends_on:
      - rabbitmq
      - postgres
    env_file:
      - ./aggregator/src/.env
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge